[comment encoding = UTF-8 /]
[**
 * The documentation of the module generate.
 */]
[module generate('http://www.example.org/basicwebsite')]


[**
 * The documentation of the template generateElement.
 * @param aPage
 */]
[template public generateElement(aWebsite : WebSite)]
[comment @main/]
[for (aPage : Page | aWebsite.pages)]
	[generatePage(aPage)/]
[/for]
[comment]For CSS file[/comment]
[file ('page.css', false, 'UTF-8')]
body {
	background-color: ivory;
	margin:1 25%;
	text-align: center;
}
h1{
	color:#aa4057;
	background-color:#4057aa;
	margin: 0 25%; 
	border-radius: 10px;
}

h2  {
	color:#aa5e40;
	background-color:#4057aa;
	border-radius: 10px;
}

.button{
	margin: 1%;
	background-color: darkgray;
}
a, a:hover {
  color: #000;
  text-decoration: none;
	
}
.paragraphLink{
	border: solid 1px brown;
	padding: 3px;
	margin: 3pt;
	background-color: greenyellow;
	border-radius: 10px;
}
.pageLink{
	border: solid 1px brown;
	padding: 3px;
	margin: 3pt;
	background-color: goldenrod;
	border-radius: 10px;
}
.externalLink{
	border: solid 1px brown;
	padding: 3px;
	margin: 3pt;
	background-color: darkseagreen;
	border-radius: 10px;
}
.section{
	border: solid 2px rebeccapurple;
	width: 46%;
	margin-left: 25%;
	margin-bottom: 1%;
	padding: 2%
}
.picture {
	width: 30%;
}
[/file]
[/template]

[template public generatePage(aPage : Page)]
[file (aPage.name.concat('.html'), false, 'UTF-8')]
<!DOCTYPE html>
<html>
 	<head>
		<link href="page.css" rel="stylesheet" media="all" type="text/css">
		<title>[aPage.name/]</title>
	</head>
  	<body>
  		<h1> [aPage.name.toUpperFirst()/] </h1>
		[for (pageContent : PageContent | aPage.pagecontents)]
			[generatePageContent(pageContent)/]
		[/for] 
	</body>
</html>
[/file]

[/template]

[template public generatePageContent(aPageContent : PageContent)]
	// TODO
[/template]

[template public generatePageContent(aParagraph : Paragraph)]
<p id='[aParagraph.name.toLower()/]' class='paragraph'> [aParagraph.text/] </p>
[/template]
[template public generatePageContent(aSection : Section)]
<section id='[aSection.name.toLower()/]' class='section'> 
	<h2> [aSection.title/] </h2>
	[for (paragraph : Paragraph | aSection.paragraphs)]
		[generatePageContent(paragraph)/]
	[/for]
	[for (section : Section | aSection.sections)]
		[generatePageContent(section)/]
	[/for]
	[for ( aLink: Link | aSection.eGet('links'))]
		[generatePageContent(aLink)/]
	[/for]
	[for ( aButton: Button | aSection.eGet('buttons'))]
		[generatePageContent(aButton)/]
	[/for]
</section>
[/template]

[template public generatePageContent(aParagraphButton: ParagraphButton)]
<Button class='button'> <a href='#[aParagraphButton.eGet('paragraph').name.toLower()/]'>[aParagraphButton.name/]</a> </Button>
[/template]

[template public generatePageContent(aPageButton: PageButton)]
<Button class='button'> <a href='[aPageButton.eGet('page').name.concat('.html')/]'>[aPageButton.name/]</a> </Button>
[/template]

[template public generatePageContent(aPageLink: PageLink)]
<a class='pageLink' href='[aPageLink.eGet('page').name.concat('.html')/]'>[aPageLink.name.toUpperFirst()/]</a>
[/template]

[template public generatePageContent(aParagraphLink: ParagraphLink)]
<a class='paragraphLink' href='#[aParagraphLink.eGet('paragraph').name.toLower()/]'>[aParagraphLink.name.toUpperFirst()/]</a>
[/template]

[template public generatePageContent(anExternalLink: ExternalLink)]
<a class='externalLink' href='[anExternalLink.address/]'>[anExternalLink.name.toUpperFirst()/]</a>
[/template]

[template public generatePageContent(anImage: Image)]
<img class='picture' id='[anImage.name/]' 
	 src='[anImage.src/]'
	 alt='[anImage.alt/]'>
[/template]
